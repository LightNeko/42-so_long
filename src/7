/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   map.c                                              :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: znicola <znicola@student.42.fr>            +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/02/03 07:10:21 by znicola           #+#    #+#             */
/*   Updated: 2025/02/06 02:55:55 by znicola          ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "so_long.h"
#include <string.h>

static size_t	count_lines(char *path, size_t *llen)
{
	char	*line;
	size_t	count;
	int		fd;

	fd = open(path, O_RDONLY);
	if (fd == -1)
		manage_error(2, "Error loading the file");
	line = get_next_line(fd);
	count = 0;
	*llen = ft_strlen(line) - 1;
	while (line != NULL)
	{
		count++;
		free(line);
		line = get_next_line(fd);
		if (line != NULL && *llen != ft_strlen(line) - 1)
		{
			free(line);
			manage_error(1, "Map Error: Map is not rectangular");
		}
	}
	free(line);
	close(fd);
	return (count);
}

static char	**store_map(char *path, size_t len, size_t llen)
{
	char	**map;
	char	**temp;
	char	*line;
	int		fd;	

	fd = open(path, O_RDONLY);
	if (fd == -1)
		manage_error(2, "Error loading the file");
	map = calloc(len, sizeof(char *));
	if (!map)
		manage_error(2, "store_map - calloc (1)");
	temp = map;
	line = get_next_line(fd);
	while (line != NULL)
	{
		*temp = ft_substr(line, 0, llen);
		temp++;
		free(line);
		line = get_next_line(fd);
	}
	close(fd);
	ft_printf("tile: %c\n", map[8][9]);
	return (map);
}

void	get_player_position(t_player *player, t_map map)
{
	size_t x;
	size_t y;
	
	player->on_tile = '0';
	y = 0;
	while (y < map.len)
	{
		x = 0;
		while (x < map.llen)
		{
			if (map.map[y][x] == 'P')
			{
				player->pos_x = x;
				player->pos_y = y;
			}
			x++;
		}
		y++;
	}
}

void	load_map(char *map_file, t_data *data)
{
	char	*path;

	path = ft_strjoin(MAP_PATH, map_file);
	if (!path)
		manage_error(2, "map_path");
	data->m.len = count_lines(path, &data->m.llen);
	data->m.map = store_map(path, data->m.len, data->m.llen);
	get_player_position(&data->p, data->m);
}
